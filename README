NAME
    Win32::File::Object - Simplified object abstraction over Win32::File

SYNOPSIS
      # Get a handle for the file.
      my $object = Win32::File::Object->new( $filename, $autowrite );
  
      # Read a property flag for the file.
      my $readonly = $object->readonly;
  
      # Set a propertly flag for the file.
      $object->readonly(1);

      # If autowrite is false, write the changes to the file.
      $object->write;

DESCRIPTION
    Win32::File is an interface to the Win32 API for file attributes.

    Unfortunately it is a direct interface to the underlying Win32 API, with
    a completely non-Perlish interface involving CamelCase function names,
    bit-field flags and return-by-param.

    Win32::File::Object is a straight-forward object-oriented Perlish
    wrapper around the raw underlying API wrapper.

METHODS
  new
      my $file = Win32::File::Object->new( $path, $autowrite );

    The "new" constructor creates a new handle to the Win32 filesystem
    attributes of an existing file or directory.

    The compulsory $filename parameter is the name of the file or directory
    to create the handle on.

    The optional $autowrite parameter, if true, indicates that the object
    should write the filesystem attributes to the file every time the method
    is called to set the property.

    If the $autowrite param is false or not provided, you will need to call
    an explicit "write" method in order to apply the changes to the file.

  path
    The "path" accessor returns the original file path as provided to the
    constructor as a string.

  autowrite
    The "autowrite" accessor returns true if the object will automatically
    write changes to the filesystem, or false if not.

  read
    the "read" method reads (updates) the filesystem attributes, in case
    they have been updated since the object was originally created.

    Returns true on success or throws an exception (dies) on error.

  write
    the "write" method writes the object attributes back to the filesystem.

    Returns true on success or throws an exception (dies) on error.

  archive
      # Get the value
      my $archive = $file->archive;
  
      # Set the value
      $file->archive(1);

    The "archive" accessor gets or set the Win32 "archive" status for the
    file.

  compressed
      # Get the value
      my $compressed = $file->compressed;
  
      # Set the value
      $file->compressed(1);

    The "compressed" accessor gets or set the Win32 "compressed" status for
    the file.

  directory
      # Get the value
      my $directory = $file->directory;
  
      # Set the value
      $file->directory(1);

    The "directory" accessor gets or set the Win32 "directory" status for
    the file.

  hidden
      # Get the value
      my $hidden = $file->hidden;
  
      # Set the value
      $file->hidden(1);

    The "hidden" accessor gets or set the Win32 "hidden" status for the
    file.

  normal
      # Get the value
      my $normal = $file->normal;
  
      # Set the value
      $file->normal(1);

    The "normal" accessor gets or set the Win32 "normal" status for the
    file.

  offline
      # Get the value
      my $offline = $file->offline;
  
      # Set the value
      $file->offline(1);

    The "offline" accessor gets or set the Win32 "offline" status for the
    file.

  readonly
      # Get the value
      my $readonly = $file->readonly;
  
      # Set the value
      $file->readonly(1);

    The "readonly" accessor gets or set the Win32 "readonly" status for the
    file.

  system
      # Get the value
      my $system = $file->system;
  
      # Set the value
      $file->system(1);

    The "system" accessor gets or set the Win32 "system" status for the
    file.

  temporary
      # Get the value
      my $temporary = $file->temporary;
  
      # Set the value
      $file->temporary(1);

    The "temporary" accessor gets or set the Win32 "temporary" status for
    the file.

SUPPORT
    Bugs should be reported via the CPAN bug tracker at

    <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Win32-File-Object>

    For other issues, or commercial enhancement or support, contact the
    author.

AUTHOR
    Adam Kennedy <adamk@cpan.org>

SEE ALSO
    Win32::File

COPYRIGHT
    Copyright 2008 Adam Kennedy.

    This program is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

    The full text of the license can be found in the LICENSE file included
    with this module.

